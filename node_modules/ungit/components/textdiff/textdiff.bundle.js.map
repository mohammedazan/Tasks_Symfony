{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "components/textdiff/textdiff.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "const ko = require('knockout');\nconst components = require('ungit-components');\nconst diff2html = require('diff2html');\nconst sideBySideDiff = 'sidebysidediff';\nconst textDiff = 'textdiff';\n\ncomponents.register('textdiff', (args) => new TextDiffViewModel(args));\ncomponents.register('textdiff.type', () => new Type());\ncomponents.register('textdiff.wordwrap', () => new WordWrap());\ncomponents.register('textdiff.whitespace', () => new WhiteSpace());\n\nconst loadLimit = 100;\n\nclass WordWrap {\n  constructor() {\n    this.value = ko.observable(false);\n\n    this.toggle = () => {\n      this.value(!this.value());\n    };\n    this.text = ko.computed(() => (this.value() ? 'Wrap Lines' : 'No Wrap'));\n    this.isActive = ko.computed(() => this.value());\n  }\n}\n\nclass Type {\n  constructor() {\n    if (\n      !!ungit.config.diffType &&\n      ungit.config.diffType !== textDiff &&\n      ungit.config.diffType !== sideBySideDiff\n    ) {\n      ungit.config.diffType = textDiff;\n      console.log('Config \"diffType\" must be either \"textdiff\" or \"sidebysidediff\".');\n    }\n\n    this.value = ko.observable(ungit.config.diffType || textDiff);\n\n    this.toggle = () => {\n      this.value(this.value() === textDiff ? sideBySideDiff : textDiff);\n    };\n    this.text = ko.computed(() => (this.value() === textDiff ? 'Inline' : 'Side By Side'));\n    this.isActive = ko.computed(() => this.value() === sideBySideDiff);\n  }\n}\n\nclass WhiteSpace {\n  constructor() {\n    this.value = ko.observable(ungit.config.ignoreWhiteSpaceDiff);\n\n    this.toggle = () => {\n      this.value(!this.value());\n    };\n    this.text = ko.computed(() => (this.value() ? 'Show Whitespace' : 'Hide Whitespace'));\n    this.isActive = ko.computed(() => this.value());\n  }\n}\n\nclass TextDiffViewModel {\n  constructor(args) {\n    this.filename = args.filename;\n    this.oldFilename = args.oldFilename;\n    this.repoPath = args.repoPath;\n    this.server = args.server;\n    this.sha1 = args.sha1;\n    this.hasMore = ko.observable(false);\n    this.diffJson = null;\n    this.loadCount = loadLimit;\n    this.textDiffType = args.textDiffType;\n    this.whiteSpace = args.whiteSpace;\n    this.isShowingDiffs = args.isShowingDiffs;\n    this.editState = args.editState;\n    this.wordWrap = args.wordWrap;\n    this.patchLineList = args.patchLineList;\n    this.numberOfSelectedPatchLines = 0;\n    this.htmlSrc = undefined;\n    this.isParsed = ko.observable(false);\n\n    this.isShowingDiffs.subscribe((newValue) => {\n      if (newValue) this.render();\n    });\n    this.textDiffType.value.subscribe(() => {\n      if (this.isShowingDiffs()) this.render();\n    });\n    this.whiteSpace.value.subscribe(() => {\n      if (this.isShowingDiffs()) this.invalidateDiff();\n    });\n\n    if (this.isShowingDiffs()) {\n      this.render();\n    }\n  }\n\n  updateNode(parentElement) {\n    ko.renderTemplate('textdiff', this, {}, parentElement);\n  }\n\n  getDiffArguments() {\n    return {\n      file: this.filename,\n      oldFile: this.oldFilename,\n      path: this.repoPath(),\n      sha1: this.sha1 ? this.sha1 : '',\n      whiteSpace: this.whiteSpace.value(),\n    };\n  }\n\n  invalidateDiff() {\n    this.diffJson = null;\n    if (this.isShowingDiffs()) this.render();\n  }\n\n  getDiffJson() {\n    return this.server\n      .getPromise('/diff', this.getDiffArguments())\n      .then((diffs) => {\n        if (typeof diffs !== 'string') {\n          // Invalid value means there is no changes, show dummy diff without any changes\n          diffs = `diff --git a/${this.filename} b/${this.filename}\n                  index aaaaaaaa..bbbbbbbb 111111\n                  --- a/${this.filename}\n                  +++ b/${this.filename}`;\n        }\n        this.diffJson = diff2html.parse(diffs);\n      })\n      .catch((err) => {\n        // The file existed before but has been removed, but we're trying to get a diff for it\n        // Most likely it will just disappear with the next refresh of the staging area\n        // so we just ignore the error here\n        if (err.errorCode != 'no-such-file') {\n          this.server.unhandledRejection(err);\n        } else {\n          ungit.logger.warn('diff, no such file', err);\n        }\n      });\n  }\n\n  render() {\n    return (!this.diffJson ? this.getDiffJson() : Promise.resolve()).then(() => {\n      if (!this.diffJson || this.diffJson.length == 0) return; // check if diffs are available (binary files do not support them)\n\n      if (!this.diffJson[0].allBlocks) {\n        this.diffJson[0].allBlocks = this.diffJson[0].blocks;\n      }\n\n      const currentLoadCount = Math.max(this.loadCount, loadLimit);\n      let lineCount = 0;\n      let loadCount = 0;\n      this.diffJson[0].blocks = this.diffJson[0].allBlocks.reduce((blocks, block) => {\n        const length = block.lines.length;\n        const remaining = currentLoadCount - lineCount;\n        if (remaining > 0) {\n          loadCount += length;\n          blocks.push(block);\n        }\n        lineCount += length;\n        return blocks;\n      }, []);\n\n      this.loadCount = loadCount;\n      this.hasMore(lineCount > loadCount);\n\n      let html = diff2html.html(this.diffJson, {\n        outputFormat:\n          this.textDiffType.value() === sideBySideDiff ? 'side-by-side' : 'line-by-line',\n        drawFileList: false,\n      });\n\n      this.numberOfSelectedPatchLines = 0;\n      let index = 0;\n\n      // ko's binding resolution is not recursive, which means below ko.bind refresh method doesn't work for\n      // data bind at getPatchCheckBox that is rendered with \"html\" binding.\n      // which is reason why manually updating the html content and refreshing kobinding to have it render...\n      if (this.patchLineList) {\n        html = html.replace(/<span class=\"d2h-code-line-prefix\">(\\+|-)/g, (match, capture) => {\n          if (this.patchLineList()[index] === undefined) {\n            this.patchLineList()[index] = true;\n          }\n\n          return this.getPatchCheckBox(capture, index, this.patchLineList()[index++]);\n        });\n      }\n\n      if (html !== this.htmlSrc) {\n        // diff has changed since last we displayed and need refresh\n        this.htmlSrc = html;\n        this.isParsed(false);\n        this.isParsed(true);\n      }\n    });\n  }\n\n  loadMore() {\n    this.loadCount += loadLimit;\n    this.render();\n  }\n\n  getPatchCheckBox(symbol, index, isActive) {\n    if (isActive) {\n      this.numberOfSelectedPatchLines++;\n    }\n    return `<span class=\"d2h-code-line-prefix\"><span data-bind=\"visible: editState() !== 'patched'\">${symbol}</span><input ${\n      isActive ? 'checked' : ''\n    } type=\"checkbox\" data-bind=\"visible: editState() === 'patched', click: togglePatchLine.bind($data, ${index})\">`;\n  }\n\n  togglePatchLine(index) {\n    this.patchLineList()[index] = !this.patchLineList()[index];\n\n    if (this.patchLineList()[index]) {\n      this.numberOfSelectedPatchLines++;\n    } else {\n      this.numberOfSelectedPatchLines--;\n    }\n\n    if (this.numberOfSelectedPatchLines === 0) {\n      this.editState('none');\n    }\n\n    return true;\n  }\n}\n"
  ]
}