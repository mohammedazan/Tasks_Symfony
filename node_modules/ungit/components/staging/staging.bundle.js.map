{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "components/ComponentRoot.ts",
    "components/staging/staging.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "declare var ungit: any;\n\nexport class ComponentRoot {\n  _apiCache: string;\n  defaultDebounceOption = {\n    maxWait: 1500,\n    leading: false,\n    trailing: true\n  }\n\n  constructor() { }\n\n  isSamePayload(value: any) {\n    const jsonString = JSON.stringify(value);\n\n    if (this._apiCache === jsonString) {\n      ungit.logger.debug(`ignoring redraw for same ${this.constructor.name} payload.`);\n      return true;\n    }\n    ungit.logger.debug(`redrawing ${this.constructor.name} payload.  \\n${jsonString}`);\n\n    this._apiCache = jsonString\n    return false;\n  }\n\n  clearApiCache() {\n    this._apiCache = undefined\n  }\n}\n",
    "const ko = require('knockout');\nconst _ = require('lodash');\nconst octicons = require('octicons');\nconst components = require('ungit-components');\nconst programEvents = require('ungit-program-events');\nconst filesToDisplayIncrmentBy = 50;\nconst filesToDisplayLimit = filesToDisplayIncrmentBy;\nconst mergeTool = ungit.config.mergeTool;\nconst { ComponentRoot } = require('../ComponentRoot');\n\ncomponents.register(\n  'staging',\n  (args) => new StagingViewModel(args.server, args.repoPath, args.graph)\n);\n\nclass StagingViewModel extends ComponentRoot {\n  constructor(server, repoPath, graph) {\n    super();\n    this.server = server;\n    this.repoPath = repoPath;\n    this.refreshContent = _.debounce(this._refreshContent, 250, this.defaultDebounceOption);\n    this.graph = graph;\n    this.filesByPath = {};\n    this.files = ko.observableArray();\n    this.commitMessageTitleCount = ko.observable(0);\n    this.commitMessageTitle = ko.observable();\n    this.commitMessageTitle.subscribe((value) => {\n      this.commitMessageTitleCount(value.length);\n    });\n    this.commitMessageBody = ko.observable();\n    this.wordWrap = components.create('textdiff.wordwrap');\n    this.textDiffType = components.create('textdiff.type');\n    this.whiteSpace = components.create('textdiff.whitespace');\n    this.inRebase = ko.observable(false);\n    this.inMerge = ko.observable(false);\n    this.inCherry = ko.observable(false);\n    this.conflictText = ko.computed(() => {\n      if (this.inMerge()) {\n        this.conflictContinue = this.conflictResolution.bind(this, '/merge/continue');\n        this.conflictAbort = this.conflictResolution.bind(this, '/merge/abort');\n        return 'Merge';\n      } else if (this.inRebase()) {\n        this.conflictContinue = this.conflictResolution.bind(this, '/rebase/continue');\n        this.conflictAbort = this.conflictResolution.bind(this, '/rebase/abort');\n        return 'Rebase';\n      } else if (this.inCherry()) {\n        this.conflictContinue = this.commit;\n        this.conflictAbort = this.discardAllChanges;\n        return 'Cherry-pick';\n      } else {\n        this.conflictContinue = undefined;\n        this.conflictAbort = undefined;\n        return undefined;\n      }\n    });\n    this.HEAD = ko.observable();\n    this.isStageValid = ko.computed(() => !this.inRebase() && !this.inMerge() && !this.inCherry());\n    this.nFiles = ko.computed(() => this.files().length);\n    this.nStagedFiles = ko.computed(\n      () => this.files().filter((f) => f.editState() === 'staged').length\n    );\n    this.allStageFlag = ko.computed(() => this.nFiles() !== this.nStagedFiles());\n    this.stats = ko.computed(() => `${this.nFiles()} files, ${this.nStagedFiles()} to be commited`);\n    this.amend = ko.observable(false);\n    this.canAmend = ko.computed(\n      () => this.HEAD() && !this.inRebase() && !this.inMerge() && !this.emptyCommit()\n    );\n    this.emptyCommit = ko.observable(false);\n    this.canEmptyCommit = ko.computed(() => this.HEAD() && !this.inRebase() && !this.inMerge());\n    this.canStashAll = ko.computed(() => !this.amend());\n    this.canPush = ko.computed(() => !!this.graph.currentRemote());\n    this.showNux = ko.computed(\n      () => this.files().length == 0 && !this.amend() && !this.inRebase() && !this.emptyCommit()\n    );\n    this.showCancelButton = ko.computed(() => this.amend() || this.emptyCommit());\n    this.commitValidationError = ko.computed(() => {\n      if (this.conflictText()) {\n        if (this.files().some((file) => file.conflict())) return 'Files in conflict';\n      } else {\n        if (\n          !this.emptyCommit() &&\n          !this.amend() &&\n          !this.files().some(\n            (file) => file.editState() === 'staged' || file.editState() === 'patched'\n          )\n        ) {\n          return 'No files to commit';\n        }\n        if (!this.commitMessageTitle()) {\n          return 'Provide a title';\n        }\n\n        if (this.textDiffType.value() === 'sidebysidediff') {\n          const patchFiles = this.files().filter((file) => file.editState() === 'patched');\n          if (patchFiles.length > 0) return 'Cannot patch with side by side view.';\n        }\n      }\n      return '';\n    });\n    this.toggleSelectAllGlyphClass = ko.computed(() => {\n      if (this.allStageFlag()) return 'glyphicon-unchecked';\n      else return 'glyphicon-check';\n    });\n\n    this.refreshContentThrottled = _.throttle(this.refreshContent.bind(this), 500, {\n      leading: false,\n      trailing: true,\n    });\n    this.invalidateFilesDiffsThrottled = _.throttle(this.invalidateFilesDiffs.bind(this), 500, {\n      leading: false,\n      trailing: true,\n    });\n    this.refreshContentThrottled();\n    this.loadAnyway = false;\n    this.isDiagOpen = false;\n    this.mutedTime = null;\n    this.discardAllIcon = octicons.trash.toSVG({ height: 15 });\n    this.stashIcon = octicons.pin.toSVG({ height: 15 });\n    this.discardIcon = octicons.x.toSVG({ height: 18 });\n    this.ignoreIcon = octicons.skip.toSVG({ height: 18 });\n  }\n\n  updateNode(parentElement) {\n    ko.renderTemplate('staging', this, {}, parentElement);\n  }\n\n  onProgramEvent(event) {\n    if (\n      event.event == 'request-app-content-refresh' ||\n      event.event === 'working-tree-changed' ||\n      event.event === 'git-directory-changed'\n    ) {\n      this.refreshContent();\n      this.invalidateFilesDiffs();\n    }\n  }\n\n  async _refreshContent() {\n    ungit.logger.debug('staging.refreshContent() triggered');\n\n    try {\n      const headPromise = this.server.getPromise('/head', { path: this.repoPath(), limit: 1 });\n      const statusPromise = this.server.getPromise('/status', {\n        path: this.repoPath(),\n        fileLimit: filesToDisplayLimit,\n      });\n      const log = await headPromise;\n      if (log.length > 0) {\n        const array = log[0].message.split('\\n');\n        this.HEAD({ title: array[0], body: array.slice(2).join('\\n') });\n      } else {\n        this.HEAD(null);\n      }\n\n      const status = await statusPromise;\n      if (this.isSamePayload(status)) {\n        return;\n      }\n\n      if (Object.keys(status.files).length > filesToDisplayLimit && !this.loadAnyway) {\n        if (this.isDiagOpen) {\n          return;\n        }\n        this.isDiagOpen = true;\n        components.showModal('toomanyfilesmodal', {\n          title: 'Too many unstaged files',\n          details: 'It is recommended to use command line as ungit may be too slow.',\n          closeFunc: (isYes) => {\n            this.isDiagOpen = false;\n            if (isYes) {\n              window.location.href = '/#/';\n            } else {\n              this.loadAnyway = true;\n              this.loadStatus(status);\n            }\n          },\n        });\n      } else {\n        this.loadStatus(status);\n      }\n    } catch (err) {\n      if (err.errorCode != 'must-be-in-working-tree' && err.errorCode != 'no-such-path') {\n        this.server.unhandledRejection(err);\n      } else {\n        ungit.logger.error('error during staging refresh: ', err);\n      }\n    } finally {\n      ungit.logger.debug('staging.refreshContent() finished');\n    }\n  }\n\n  loadStatus(status) {\n    this.setFiles(status.files);\n    this.inRebase(!!status.inRebase);\n    this.inMerge(!!status.inMerge);\n    // There are time where '.git/CHERRY_PICK_HEAD' file is created and no files are in conflicts.\n    // in such cases we should ignore exception as no good way to resolve it.\n    this.inCherry(!!status.inCherry && !!status.inConflict);\n\n    if (this.inRebase()) {\n      this.commitMessageTitle('Rebase conflict');\n      this.commitMessageBody('Commit messages are not applicable!\\n(╯°□°）╯︵ ┻━┻');\n    } else if (this.inMerge() || this.inCherry()) {\n      const lines = status.commitMessage.split('\\n');\n      if (!this.commitMessageTitle()) {\n        this.commitMessageTitle(lines[0]);\n        this.commitMessageBody(lines.slice(1).join('\\n'));\n      }\n    }\n  }\n\n  setFiles(files) {\n    const newFiles = [];\n    for (const fileStatus of Object.values(files)) {\n      let fileViewModel = this.filesByPath[fileStatus.fileName];\n      if (!fileViewModel) {\n        this.filesByPath[fileStatus.fileName] = fileViewModel = new FileViewModel(\n          this,\n          fileStatus.fileName,\n          fileStatus.oldFileName,\n          fileStatus.displayName\n        );\n      } else {\n        // this is mainly for patching and it may not fire due to the fact that\n        // '/commit' triggers working-tree-changed which triggers throttled refresh\n        fileViewModel.diff().invalidateDiff();\n      }\n      fileViewModel.setState(fileStatus);\n      newFiles.push(fileViewModel);\n    }\n    this.files(newFiles);\n  }\n\n  toggleAmend() {\n    if (!this.amend() && !this.commitMessageTitle()) {\n      this.commitMessageTitle(this.HEAD().title);\n      this.commitMessageBody(this.HEAD().body);\n    } else if (this.amend()) {\n      const isPrevDefaultMsg =\n        this.commitMessageTitle() == this.HEAD().title &&\n        this.commitMessageBody() == this.HEAD().body;\n      if (isPrevDefaultMsg) {\n        this.commitMessageTitle('');\n        this.commitMessageBody('');\n      }\n    }\n    this.amend(!this.amend());\n  }\n\n  toggleEmptyCommit() {\n    this.commitMessageTitle('Empty commit');\n    this.commitMessageBody();\n    this.emptyCommit(true);\n  }\n\n  resetMessages() {\n    this.commitMessageTitle('');\n    this.commitMessageBody('');\n    for (const key in this.filesByPath) {\n      const element = this.filesByPath[key];\n      element.diff().invalidateDiff();\n      element.patchLineList.removeAll();\n      element.isShowingDiffs(false);\n      element.editState(element.editState() === 'patched' ? 'none' : element.editState());\n    }\n    this.amend(false);\n    this.emptyCommit(false);\n  }\n\n  commit() {\n    const files = this.files()\n      .filter((file) => file.editState() !== 'none')\n      .map((file) => ({\n        name: file.name(),\n        patchLineList: file.editState() === 'patched' ? file.patchLineList() : null,\n      }));\n    let commitMessage = this.commitMessageTitle();\n    if (this.commitMessageBody()) commitMessage += `\\n\\n${this.commitMessageBody()}`;\n\n    this.server\n      .postPromise('/commit', {\n        path: this.repoPath(),\n        message: commitMessage,\n        files,\n        amend: this.amend(),\n        emptyCommit: this.emptyCommit(),\n      })\n      .then(() => {\n        this.resetMessages();\n        programEvents.dispatch({ event: 'branch-updated' });\n      })\n      .catch((e) => this.server.unhandledRejection(e));\n  }\n\n  commitnpush() {\n    const files = this.files()\n      .filter((file) => file.editState() !== 'none')\n      .map((file) => ({\n        name: file.name(),\n        patchLineList: file.editState() === 'patched' ? file.patchLineList() : null,\n      }));\n    let commitMessage = this.commitMessageTitle();\n    if (this.commitMessageBody()) commitMessage += `\\n\\n${this.commitMessageBody()}`;\n\n    this.server\n      .postPromise('/commit', {\n        path: this.repoPath(),\n        message: commitMessage,\n        files,\n        amend: this.amend(),\n        emptyCommit: this.emptyCommit(),\n      })\n      .then(() => {\n        this.resetMessages();\n        return this.server.postPromise('/push', {\n          path: this.repoPath(),\n          remote: this.graph.currentRemote(),\n        });\n      })\n      .catch((err) => {\n        if (err.errorCode == 'non-fast-forward') {\n          components.showModal('yesnomodal', {\n            title: 'Force push?',\n            details: \"The remote branch can't be fast-forwarded.\",\n            closeFunc: (isYes) => {\n              if (!isYes) return;\n              this.server.postPromise('/push', {\n                path: this.repoPath(),\n                remote: this.graph.currentRemote(),\n                force: true,\n              });\n            },\n          });\n        } else {\n          this.server.unhandledRejection(err);\n        }\n      });\n  }\n\n  conflictResolution(apiPath) {\n    let commitMessage = this.commitMessageTitle();\n    if (this.commitMessageBody()) commitMessage += `\\n\\n${this.commitMessageBody()}`;\n    this.server\n      .postPromise(apiPath, { path: this.repoPath(), message: commitMessage })\n      .catch((e) => this.server.unhandledRejection(e))\n      .finally(() => {\n        this.resetMessages();\n      });\n  }\n\n  invalidateFilesDiffs() {\n    this.files().forEach((file) => {\n      file.diff().invalidateDiff();\n    });\n  }\n\n  cancelAmendEmpty() {\n    this.resetMessages();\n  }\n\n  discardAllChanges() {\n    components.showModal('yesnomodal', {\n      title: 'Are you sure you want to discard all changes?',\n      details: 'This operation cannot be undone.',\n      closeFunc: (isYes) => {\n        if (!isYes) return;\n        this.server\n          .postPromise('/discardchanges', { path: this.repoPath(), all: true })\n          .catch((e) => this.server.unhandledRejection(e));\n      },\n    });\n  }\n\n  stashAll() {\n    this.server\n      .postPromise('/stashes', { path: this.repoPath(), message: this.commitMessageTitle() })\n      .catch((e) => this.server.unhandledRejection(e));\n  }\n\n  toggleAllStages() {\n    const allStageFlag = this.allStageFlag();\n    for (const n in this.files()) {\n      this.files()[n].editState(allStageFlag ? 'staged' : 'none');\n    }\n  }\n\n  onEnter(d, e) {\n    if (e.keyCode === 13 && !this.commitValidationError()) {\n      this.commit();\n    }\n    return true;\n  }\n\n  onAltEnter(d, e) {\n    if (e.keyCode === 13 && e.altKey && !this.commitValidationError()) {\n      this.commit();\n    }\n    return true;\n  }\n}\n\nclass FileViewModel {\n  constructor(staging, name, oldName, displayName) {\n    this.staging = staging;\n    this.server = staging.server;\n    this.editState = ko.observable('staged'); // staged, patched and none\n    this.name = ko.observable(name);\n    this.oldName = ko.observable(oldName);\n    this.displayName = ko.observable(displayName);\n    this.isNew = ko.observable(false);\n    this.removed = ko.observable(false);\n    this.conflict = ko.observable(false);\n    this.renamed = ko.observable(false);\n    this.isShowingDiffs = ko.observable(false);\n    this.additions = ko.observable('');\n    this.deletions = ko.observable('');\n    this.modified = ko.computed(() => {\n      // only show modfied whe not removed, not conflicted, not new, not renamed\n      // and length of additions and deletions is 0.\n      return (\n        !this.removed() &&\n        !this.conflict() &&\n        !this.isNew() &&\n        this.additions().length === 0 &&\n        this.deletions().length === 0\n      );\n    });\n    this.fileType = ko.observable('text');\n    this.patchLineList = ko.observableArray();\n    this.diff = ko.observable();\n    this.isShowPatch = ko.computed(\n      () =>\n        // if not new file\n        // and if not merging\n        // and if not rebasing\n        // and if text file\n        // and if diff is showing, display patch button\n        !this.isNew() &&\n        !staging.inMerge() &&\n        !staging.inRebase() &&\n        this.fileType() === 'text' &&\n        this.isShowingDiffs()\n    );\n    this.mergeTool = ko.computed(() => this.conflict() && mergeTool !== false);\n\n    this.editState.subscribe((value) => {\n      if (value === 'none') {\n        this.patchLineList.removeAll();\n      } else if (value === 'patched') {\n        if (this.diff().render) this.diff().render();\n      }\n    });\n  }\n\n  getSpecificDiff() {\n    return components.create(!this.name() || `${this.fileType()}diff`, {\n      filename: this.name(),\n      oldFilename: this.oldName(),\n      displayFilename: this.displayName(),\n      repoPath: this.staging.repoPath,\n      server: this.server,\n      textDiffType: this.staging.textDiffType,\n      whiteSpace: this.staging.whiteSpace,\n      isShowingDiffs: this.isShowingDiffs,\n      patchLineList: this.patchLineList,\n      editState: this.editState,\n      wordWrap: this.staging.wordWrap,\n    });\n  }\n\n  setState(state) {\n    this.displayName(state.displayName);\n    this.isNew(state.isNew);\n    this.removed(state.removed);\n    this.conflict(state.conflict);\n    this.renamed(state.renamed);\n    this.fileType(state.type);\n    this.additions(state.additions != '-' ? `+${state.additions}` : '');\n    this.deletions(state.deletions != '-' ? `-${state.deletions}` : '');\n    if (this.diff()) {\n      this.diff().invalidateDiff();\n    } else {\n      this.diff(this.getSpecificDiff());\n    }\n    if (this.diff().isNew) this.diff().isNew(state.isNew);\n    if (this.diff().isRemoved) this.diff().isRemoved(state.removed);\n  }\n\n  toggleStaged() {\n    if (this.editState() === 'none') {\n      this.editState('staged');\n    } else {\n      this.editState('none');\n    }\n    this.patchLineList([]);\n  }\n\n  discardChanges() {\n    const timeSinceLastMute = new Date().getTime() - this.staging.mutedTime;\n    const isMuteWarning = timeSinceLastMute < ungit.config.disableDiscardMuteTime;\n    ungit.logger.debug(\n      `discard time since mute: ${timeSinceLastMute}, isMuteWarning: ${isMuteWarning}`\n    );\n    if (ungit.config.disableDiscardWarning || isMuteWarning) {\n      this.server\n        .postPromise('/discardchanges', { path: this.staging.repoPath(), file: this.name() })\n        .catch((e) => this.server.unhandledRejection(e));\n    } else {\n      components.showModal('yesnomutemodal', {\n        title: 'Are you sure you want to discard these changes?',\n        details: 'This operation cannot be undone.',\n        closeFunc: (isYes, isMute) => {\n          if (isYes) {\n            this.server\n              .postPromise('/discardchanges', { path: this.staging.repoPath(), file: this.name() })\n              .catch((e) => this.server.unhandledRejection(e));\n          }\n          if (isMute) {\n            this.staging.mutedTime = new Date().getTime();\n          }\n        },\n      });\n    }\n  }\n\n  ignoreFile() {\n    this.server\n      .postPromise('/ignorefile', { path: this.staging.repoPath(), file: this.name() })\n      .catch((err) => {\n        if (err.errorCode == 'file-already-git-ignored') {\n          // The file was already in the .gitignore, so force an update of the staging area (to hopefully clear away this file)\n          programEvents.dispatch({ event: 'working-tree-changed' });\n        } else {\n          this.server.unhandledRejection(err);\n        }\n      });\n  }\n\n  resolveConflict() {\n    this.server\n      .postPromise('/resolveconflicts', { path: this.staging.repoPath(), files: [this.name()] })\n      .catch((e) => this.server.unhandledRejection(e));\n  }\n\n  launchMergeTool() {\n    this.server\n      .postPromise('/launchmergetool', {\n        path: this.staging.repoPath(),\n        file: this.name(),\n        tool: mergeTool,\n      })\n      .catch((e) => this.server.unhandledRejection(e));\n  }\n\n  toggleDiffs() {\n    this.isShowingDiffs(!this.isShowingDiffs());\n  }\n\n  patchClick() {\n    if (!this.isShowingDiffs()) return;\n\n    if (this.editState() === 'patched') {\n      this.editState('staged');\n    } else {\n      this.editState('patched');\n    }\n  }\n}\n"
  ]
}