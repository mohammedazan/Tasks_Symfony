(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
var ko = require('knockout');
var components = require('ungit-components');
var signals = require('signals');
components.register('login', function (args) { return new LoginViewModel(args.server); });
var LoginViewModel = /** @class */ (function () {
    function LoginViewModel(server) {
        var _this = this;
        this.server = server;
        this.loggedIn = new signals.Signal();
        this.status = ko.observable('loading');
        this.username = ko.observable();
        this.password = ko.observable();
        this.loginError = ko.observable();
        this.server
            .getPromise('/loggedin')
            .then(function (status) {
            if (status.loggedIn) {
                _this.loggedIn.dispatch();
                _this.status('loggedIn');
            }
            else {
                _this.status('login');
            }
        })
            .catch(function (err) { });
    }
    LoginViewModel.prototype.updateNode = function (parentElement) {
        ko.renderTemplate('login', this, {}, parentElement);
    };
    LoginViewModel.prototype.login = function () {
        var _this = this;
        this.server
            .postPromise('/login', { username: this.username(), password: this.password() })
            .then(function (res) {
            _this.loggedIn.dispatch();
            _this.status('loggedIn');
        })
            .catch(function (err) {
            if (err.res.body.error) {
                _this.loginError(err.res.body.error);
            }
            else {
                _this.server.unhandledRejection(err);
            }
        });
    };
    return LoginViewModel;
}());

},{"knockout":undefined,"signals":undefined,"ungit-components":undefined}]},{},[1])
//# sourceMappingURL=login.bundle.js.map
