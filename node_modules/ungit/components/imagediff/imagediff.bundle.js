(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
var ko = require('knockout');
var octicons = require('octicons');
var components = require('ungit-components');
var encodePath = require('ungit-address-parser').encodePath;
components.register('imagediff', function (args) { return new ImageDiffViewModel(args); });
var ImageDiffViewModel = /** @class */ (function () {
    function ImageDiffViewModel(args) {
        var _this = this;
        this.filename = args.filename;
        this.oldFilename = args.oldFilename;
        this.repoPath = args.repoPath;
        this.isNew = ko.observable(false);
        this.isRemoved = ko.observable(false);
        this.sha1 = args.sha1;
        this.state = ko.computed(function () {
            if (_this.isNew())
                return 'new';
            if (_this.isRemoved())
                return 'removed';
            return 'changed';
        });
        var gitDiffURL = "".concat(ungit.config.rootPath, "/api/diff/image?path=").concat(encodePath(this.repoPath()));
        this.oldImageSrc =
            gitDiffURL + "&filename=".concat(this.oldFilename, "&version=").concat(this.sha1 ? this.sha1 + '^' : 'HEAD');
        this.newImageSrc =
            gitDiffURL + "&filename=".concat(this.filename, "&version=").concat(this.sha1 ? this.sha1 : 'current');
        this.isShowingDiffs = args.isShowingDiffs;
        this.rightArrowIcon = octicons['arrow-right'].toSVG({ height: 100 });
        this.downArrowIcon = octicons['arrow-down'].toSVG({ height: 100 });
    }
    ImageDiffViewModel.prototype.updateNode = function (parentElement) {
        ko.renderTemplate('imagediff', this, {}, parentElement);
    };
    ImageDiffViewModel.prototype.invalidateDiff = function () { };
    ImageDiffViewModel.prototype.newImageError = function () {
        this.isRemoved(true);
    };
    ImageDiffViewModel.prototype.oldImageError = function () {
        this.isNew(true);
    };
    return ImageDiffViewModel;
}());

},{"knockout":undefined,"octicons":undefined,"ungit-address-parser":undefined,"ungit-components":undefined}]},{},[1])
//# sourceMappingURL=imagediff.bundle.js.map
